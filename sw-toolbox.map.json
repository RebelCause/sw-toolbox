{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/global-options.js","lib/sw-toolbox.js","lib/helpers/logger.js"],"names":["globalOptions","require","module","exports","message","options","flag","debug","console","log"],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AE7GA,YAEA,MAAMA,eAAgBC,QAAQ,uBAE9BC,QAAOC,QAAU,SAASC,EAASC,GACjCA,EAAUA,KACV,IAAIC,GAAOD,EAAQE,OAASP,cAAcO,KACtCD,IACFE,QAAQC,IAAI,gBAAkBL;;ADxBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n\tCopyright 2015 Google Inc. All Rights Reserved.\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n'use strict';\n\nclass CacheOptions {\n  constructor(options) {\n    options = options || {};\n\n    this._name = options.name || '$$$toolbox-cache$$$';\n    this._maxAgeSeconds = options.maxAgeSeconds || null;\n    this._maxEntries = options.maxEntries || null;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    if (typeof name !== 'string' || name.length === 0) {\n      console.warn('options.cache.name must be a string ' +\n        '. Ignoring new value: ' + name);\n      return;\n    }\n\n    this._name = name;\n  }\n\n  get maxAgeSeconds() {\n    return this._maxAgeSeconds;\n  }\n\n  set maxAgeSeconds(maxAgeSeconds) {\n    if (maxAgeSeconds !== null && typeof maxAgeSeconds !== 'number') {\n      console.warn('options.maxAgeSeconds must be a a number ' +\n        'or null. Ignoring new value: ' + maxAgeSeconds);\n      return;\n    }\n\n    this._maxAgeSeconds = maxAgeSeconds;\n  }\n\n  get maxEntries() {\n    return this._maxEntries;\n  }\n\n  set maxEntries(maxEntries) {\n    if (maxEntries !== null && typeof maxEntries !== 'number') {\n      console.warn('options.maxEntries must be a a number ' +\n        'or null. Ignoring new value: ' + maxEntries);\n      return;\n    }\n\n    this._maxEntries = maxEntries;\n  }\n}\n\nclass GlobalOptions {\n  constructor() {\n    this.DEBUG_DEFAULT = false;\n    this.NETWORK_TIMEOUT_SECONDS = null;\n\n    this.initialise();\n  }\n\n  initialise(newOptions) {\n    newOptions = newOptions || {};\n\n    this._debug = newOptions.debug || this.DEBUG_DEFAULT;\n    this._networkTimeoutSeconds =\n      newOptions.networkTimeoutSeconds || this.NETWORK_TIMEOUT_SECONDS;\n    this._cache = newOptions.cache ?\n      new CacheOptions(newOptions.cache) : new CacheOptions();\n  }\n\n  get debug() {\n    return this._debug;\n  }\n\n  set debug(debugValue) {\n    if (typeof debugValue !== 'boolean') {\n      console.warn('options.debug must be a true or false boolean. ' +\n        'Ignoring new value: ' + debugValue);\n      return;\n    }\n\n    this._debug = debugValue;\n  }\n\n  get networkTimeoutSeconds() {\n    return this._networkTimeoutSeconds;\n  }\n\n  set networkTimeoutSeconds(timeoutSecs) {\n    if (timeoutSecs !== null && typeof timeoutSecs !== 'number') {\n      console.warn('options.networkTimeoutSeconds must be a a number ' +\n        'or null. Ignoring new value: ' + timeoutSecs);\n      return;\n    }\n\n    this._networkTimeoutSeconds = timeoutSecs;\n  }\n\n  get cache() {\n    return this._cache;\n  }\n\n  set cache(newCache) {\n    this._cache = new CacheOptions(newCache);\n  }\n}\n\nmodule.exports = new GlobalOptions();\n","/*\n  Copyright 2014 Google Inc. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n'use strict';\n\nconst logger = require('./helpers/logger.js');\nconst globalOptions = require('./global-options.js');\n\nclass SWToolbox {\n  constructor() {\n    logger.debug('Service Worker Toolbox is loading');\n    this._options = globalOptions;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(newOptions) {\n    globalOptions.initialise(newOptions);\n  }\n\n  _validatePrecacheInput(items) {\n    var isValid = Array.isArray(items);\n    if (isValid) {\n      items.forEach(function(item) {\n        if (!(typeof item === 'string' || (item instanceof Request))) {\n          isValid = false;\n        }\n      });\n    }\n\n    return isValid;\n  }\n\n  precache(items) {\n    if (!(items instanceof Promise) && !this._validatePrecacheInput(items)) {\n      throw new TypeError('The precache method expects either an array of ' +\n      'strings and/or Requests or a Promise that resolves to an array of ' +\n      'strings and/or Requests.');\n    }\n\n    // Either Promise of valid\n    self.addEventListener('install', event => {\n      logger.debug('install event fired');\n\n      var inactiveCache = this.options.cache.name + '$$$inactive$$$';\n      logger.debug('creating cache [' + inactiveCache + ']');\n\n      event.waitUntil(\n        logger.openCache({cache: {name: inactiveCache}})\n        .then(function() {\n          /** return Promise.all(options.preCacheItems)\n          .then(flatten)\n          .then(validatePrecacheInput)\n          .then(function(preCacheItems) {\n            helpers.debug('preCache list: ' +\n                (preCacheItems.join(', ') || '(none)'));\n            return cache.addAll(preCacheItems);\n          });**/\n        })\n      );\n    });\n  }\n}\n\nmodule.exports = new SWToolbox();\n","/*\n\tCopyright 2015 Google Inc. All Rights Reserved.\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n\n'use strict';\n\nconst globalOptions = require('../global-options.js');\n\nmodule.exports = function(message, options) {\n  options = options || {};\n  var flag = options.debug || globalOptions.debug;\n  if (flag) {\n    console.log('[sw-toolbox] ' + message);\n  }\n};\n"]}