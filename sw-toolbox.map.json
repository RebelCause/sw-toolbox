{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/sw-toolbox.js","lib/helpers.js","lib/options.js","lib/idb-cache-expiration.js"],"names":["debug","message","options","flag","globalOptions","console","log","openCache","cacheName","cache","name","caches","open","fetchAndCache","request","successResponses","fetch","clone","then","response","method","test","status","put","cacheOptions","maxEntries","maxAgeSeconds","queueCacheExpiration","cleanup","cleanupCache","bind","cleanupQueue","requestUrl","url","now","Date","idbCacheExpiration","getDb","db","setTimestampForUrl","expireEntries","urlsToDelete","deletionPromises","map","urlToDelete","Promise","all","error","renameCache","source","destination","results","sourceCache","destCache","keys","requests","match","require","module","exports","scope","self","registration","URL","location","href","networkTimeoutSeconds","preCacheItems","openDb","resolve","reject","indexedDB","DB_PREFIX","DB_VERSION","onupgradeneeded","objectStore","result","createObjectStore","STORE_NAME","keyPath","URL_PROPERTY","createIndex","TIMESTAMP_PROPERTY","unique","onsuccess","onerror","cacheNameToDbPromise","transaction","timestamp","oncomplete","onabort","expireOldEntries","maxAgeMillis","urls","index","openCursor","cursorEvent","cursor","target","value","push","expireExtraEntries","countRequest","count","initialCount","length","oldUrls","extraUrls","concat"],"mappings":"AAAA;AEeA,YAKA,SAASA,OAAMC,EAASC,GACtBA,EAAUA,KACV,IAAIC,GAAOD,EAAQF,OAASI,cAAcJ,KACtCG,IACFE,QAAQC,IAAI,gBAAkBL,GAIlC,QAASM,WAAUL,GACjB,GAAIM,EAMJ,OALIN,IAAWA,EAAQO,QACrBD,EAAYN,EAAQO,MAAMC,MAE5BF,EAAYA,GAAaJ,cAAcK,MAAMC,KAEtCC,OAAOC,KAAKJ,GAGrB,QAASK,eAAcC,EAASZ,GAC9BA,EAAUA,KACV,IAAIa,GAAmBb,EAAQa,kBAC3BX,cAAcW,gBAElB,OAAOC,OAAMF,EAAQG,SAASC,KAAK,SAASC,GAwB1C,MAnBuB,QAAnBL,EAAQM,QAAoBL,EAAiBM,KAAKF,EAASG,SAC7Df,UAAUL,GAASgB,KAAK,SAAST,GAC/BA,EAAMc,IAAIT,EAASK,GAAUD,KAAK,WAIhC,GAAIM,GAAetB,EAAQO,OAASL,cAAcK,OAK7Ce,EAAaC,YAAcD,EAAaE,gBACzCF,EAAad,MACfiB,qBAAqBb,EAASL,EAAOe,OAMtCL,EAASF,UAKpB,QAASU,sBAAqBb,EAASL,EAAOe,GAC5C,GAAII,GAAUC,aAAaC,KAAK,KAAMhB,EAASL,EAAOe,EAGpDO,cADEA,aACaA,aAAab,KAAKU,GAElBA,IAInB,QAASC,cAAaf,EAASL,EAAOe,GACpC,GAAIQ,GAAalB,EAAQmB,IACrBP,EAAgBF,EAAaE,cAC7BD,EAAaD,EAAaC,WAC1BjB,EAAYgB,EAAad,KAEzBwB,EAAMC,KAAKD,KAIf,OAHAlC,OAAM,0BAA4BgC,EAAa,oBAC7CP,EAAa,gBAAkBC,GAE1BU,mBAAmBC,MAAM7B,GAAWU,KAAK,SAASoB,GACvD,MAAOF,oBAAmBG,mBAAmBD,EAAIN,EAAYE,KAC5DhB,KAAK,SAASoB,GACf,MAAOF,oBAAmBI,cAAcF,EAAIb,EAAYC,EAAeQ,KACtEhB,KAAK,SAASuB,GACfzC,MAAM,4BAEN,IAAI0C,GAAmBD,EAAaE,IAAI,SAASC,GAC/C,MAAOnC,GAAAA,UAAamC,IAGtB,OAAOC,SAAQC,IAAIJ,GAAkBxB,KAAK,WACxClB,MAAM,gCAZHoC,SAcE,SAASW,GAChB/C,MAAM+C,KAIV,QAASC,aAAYC,EAAQC,EAAahD,GAExC,MADAF,OAAM,oBAAsBiD,EAAS,SAAWC,EAAc,IAAKhD,GAC5DS,OAAAA,UAAcuC,GAAahC,KAAK,WACrC,MAAO2B,SAAQC,KACbnC,OAAOC,KAAKqC,GACZtC,OAAOC,KAAKsC,KACXhC,KAAK,SAASiC,GACf,GAAIC,GAAcD,EAAQ,GACtBE,EAAYF,EAAQ,EAExB,OAAOC,GAAYE,OAAOpC,KAAK,SAASqC,GACtC,MAAOV,SAAQC,IAAIS,EAASZ,IAAI,SAAS7B,GACvC,MAAOsC,GAAYI,MAAM1C,GAASI,KAAK,SAASC,GAC9C,MAAOkC,GAAU9B,IAAIT,EAASK,UAGjCD,KAAK,WACN,MAAOP,QAAAA,UAAcsC,SA/G7B,GAAI7C,eAAgBqD,QAAQ,aACxBrB,mBAAqBqB,QAAQ,0BAqD7B1B,YA+DJ2B,QAAOC,SACL3D,MAAOA,MACPa,cAAeA,cACfN,UAAWA,UACXyC,YAAaA;;AE3Hf,YASA,SAASoB,QAAO5D,GACd,MAAO,IAAIqC,SAAQ,SAASwB,EAASC,GACnC,GAAIxD,GAAUyD,UAAU3D,KAAK4D,UAAYhE,EAAWiE,WAEpD3D,GAAQ4D,gBAAkB,WACxB,GAAIC,GAAc7D,EAAQ8D,OAAOC,kBAAkBC,YAC9CC,QAASC,cACdL,GAAYM,YAAYC,mBAAoBA,oBACvCC,QAAQ,KAGfrE,EAAQsE,UAAY,WAClBf,EAAQvD,EAAQ8D,SAGlB9D,EAAQuE,QAAU,WAChBf,EAAOxD,EAAQiC,UAKrB,QAASV,OAAM7B,GAKb,MAJMA,KAAa8E,wBACjBA,qBAAqB9E,GAAa4D,OAAO5D,IAGpC8E,qBAAqB9E,GAG9B,QAAS+B,oBAAmBD,EAAIL,EAAKC,GACnC,MAAO,IAAIW,SAAQ,SAASwB,EAASC,GACnC,GAAIiB,GAAcjD,EAAGiD,YAAYT,WAAY,aACzCH,EAAcY,EAAYZ,YAAYG,WAC1CH,GAAYpD,KAAKU,IAAKA,EAAKuD,UAAWtD,IAEtCqD,EAAYE,WAAa,WACvBpB,EAAQ/B,IAGViD,EAAYG,QAAU,WACpBpB,EAAOiB,EAAYxC,UAKzB,QAAS4C,kBAAiBrD,EAAIZ,EAAeQ,GAG3C,MAAKR,GAIE,GAAImB,SAAQ,SAASwB,EAASC,GACnC,GAAIsB,GAA+B,IAAhBlE,EACfmE,KAEAN,EAAcjD,EAAGiD,YAAYT,WAAY,aACzCH,EAAcY,EAAYZ,YAAYG,YACtCgB,EAAQnB,EAAYmB,MAAMZ,mBAE9BY,GAAMC,aAAaX,UAAY,SAASY,GACtC,GAAIC,GAASD,EAAYE,OAAOtB,MAChC,IAAIqB,GACE/D,EAAM0D,EAAeK,EAAOE,MAAMjB,oBAAqB,CACzD,GAAIjD,GAAMgE,EAAOE,MAAMnB,aACvBa,GAAKO,KAAKnE,GACV0C,EAAAA,UAAmB1C,GACnBgE,EAAAA,gBAKNV,EAAYE,WAAa,WACvBpB,EAAQwB,IAGVN,EAAYG,QAAUpB,IA3BfzB,QAAQwB,YA+BnB,QAASgC,oBAAmB/D,EAAIb,GAG9B,MAAKA,GAIE,GAAIoB,SAAQ,SAASwB,EAASC,GACnC,GAAIuB,MAEAN,EAAcjD,EAAGiD,YAAYT,WAAY,aACzCH,EAAcY,EAAYZ,YAAYG,YACtCgB,EAAQnB,EAAYmB,MAAMZ,oBAE1BoB,EAAeR,EAAMS,OACzBT,GAAMS,QAAQnB,UAAY,WACxB,GAAIoB,GAAeF,EAAa1B,MAE5B4B,GAAe/E,IACjBqE,EAAMC,aAAaX,UAAY,SAASY,GACtC,GAAIC,GAASD,EAAYE,OAAOtB,MAChC,IAAIqB,EAAQ,CACV,GAAIhE,GAAMgE,EAAOE,MAAMnB,aACvBa,GAAKO,KAAKnE,GACV0C,EAAAA,UAAmB1C,GACfuE,EAAeX,EAAKY,OAAShF,GAC/BwE,EAAAA,kBAOVV,EAAYE,WAAa,WACvBpB,EAAQwB,IAGVN,EAAYG,QAAUpB,IAjCfzB,QAAQwB,YAqCnB,QAAS7B,eAAcF,EAAIb,EAAYC,EAAeQ,GACpD,MAAOyD,kBAAiBrD,EAAIZ,EAAeQ,GAAKhB,KAAK,SAASwF,GAC5D,MAAOL,oBAAmB/D,EAAIb,GAAYP,KAAK,SAASyF,GACtD,MAAOD,GAAQE,OAAOD,OAnI5B,GAAInC,WAAY,cACZC,WAAa,EACbK,WAAa,QACbE,aAAe,MACfE,mBAAqB,YACrBI,uBAmIJ5B,QAAOC,SACLtB,MAAOA,MACPE,mBAAoBA,mBACpBC,cAAeA;;AD7IjB,YAIA,IAAIoB,MAEFA,OADEC,KAAKC,aACCD,KAAKC,aAAaF,MAElBC,KAAKD,OAAS,GAAIG,KAAI,KAAMF,KAAKG,UAAUC,KAGrDP,OAAOC,SACLlD,OACEC,KAAM,sBAAwBkD,MAAQ,MACtClC,cAAe,KACfD,WAAY,MAEdzB,OAAO,EACPkE,sBAAuB,KACvBC,iBAIApD,iBAAkB;;AFtCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n  Copyright 2014 Google Inc. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n'use strict';\n\nconst helpers = require('./helpers');\n\nclass SWToolbox {\n  constructor() {\n    helpers.debug('Service Worker Toolbox is loading');\n  }\n\n  precache() {\n    \n  }\n}\n\nmodule.exports = new SWToolbox();\n","/*\n  Copyright 2014 Google Inc. All Rights Reserved.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n'use strict';\n\nvar globalOptions = require('./options');\nvar idbCacheExpiration = require('./idb-cache-expiration');\n\nfunction debug(message, options) {\n  options = options || {};\n  var flag = options.debug || globalOptions.debug;\n  if (flag) {\n    console.log('[sw-toolbox] ' + message);\n  }\n}\n\nfunction openCache(options) {\n  var cacheName;\n  if (options && options.cache) {\n    cacheName = options.cache.name;\n  }\n  cacheName = cacheName || globalOptions.cache.name;\n\n  return caches.open(cacheName);\n}\n\nfunction fetchAndCache(request, options) {\n  options = options || {};\n  var successResponses = options.successResponses ||\n      globalOptions.successResponses;\n\n  return fetch(request.clone()).then(function(response) {\n    // Only cache GET requests with successful responses.\n    // Since this is not part of the promise chain, it will be done\n    // asynchronously and will not block the response from being returned to the\n    // page.\n    if (request.method === 'GET' && successResponses.test(response.status)) {\n      openCache(options).then(function(cache) {\n        cache.put(request, response).then(function() {\n          // If any of the options are provided in options.cache then use them.\n          // Do not fallback to the global options for any that are missing\n          // unless they are all missing.\n          var cacheOptions = options.cache || globalOptions.cache;\n\n          // Only run the cache expiration logic if at least one of the maximums\n          // is set, and if we have a name for the cache that the options are\n          // being applied to.\n          if ((cacheOptions.maxEntries || cacheOptions.maxAgeSeconds) &&\n              cacheOptions.name) {\n            queueCacheExpiration(request, cache, cacheOptions);\n          }\n        });\n      });\n    }\n\n    return response.clone();\n  });\n}\n\nvar cleanupQueue;\nfunction queueCacheExpiration(request, cache, cacheOptions) {\n  var cleanup = cleanupCache.bind(null, request, cache, cacheOptions);\n\n  if (cleanupQueue) {\n    cleanupQueue = cleanupQueue.then(cleanup);\n  } else {\n    cleanupQueue = cleanup();\n  }\n}\n\nfunction cleanupCache(request, cache, cacheOptions) {\n  var requestUrl = request.url;\n  var maxAgeSeconds = cacheOptions.maxAgeSeconds;\n  var maxEntries = cacheOptions.maxEntries;\n  var cacheName = cacheOptions.name;\n\n  var now = Date.now();\n  debug('Updating LRU order for ' + requestUrl + '. Max entries is ' +\n    maxEntries + ', max age is ' + maxAgeSeconds);\n\n  return idbCacheExpiration.getDb(cacheName).then(function(db) {\n    return idbCacheExpiration.setTimestampForUrl(db, requestUrl, now);\n  }).then(function(db) {\n    return idbCacheExpiration.expireEntries(db, maxEntries, maxAgeSeconds, now);\n  }).then(function(urlsToDelete) {\n    debug('Successfully updated IDB.');\n\n    var deletionPromises = urlsToDelete.map(function(urlToDelete) {\n      return cache.delete(urlToDelete);\n    });\n\n    return Promise.all(deletionPromises).then(function() {\n      debug('Done with cache cleanup.');\n    });\n  }).catch(function(error) {\n    debug(error);\n  });\n}\n\nfunction renameCache(source, destination, options) {\n  debug('Renaming cache: [' + source + '] to [' + destination + ']', options);\n  return caches.delete(destination).then(function() {\n    return Promise.all([\n      caches.open(source),\n      caches.open(destination)\n    ]).then(function(results) {\n      var sourceCache = results[0];\n      var destCache = results[1];\n\n      return sourceCache.keys().then(function(requests) {\n        return Promise.all(requests.map(function(request) {\n          return sourceCache.match(request).then(function(response) {\n            return destCache.put(request, response);\n          });\n        }));\n      }).then(function() {\n        return caches.delete(source);\n      });\n    });\n  });\n}\n\nmodule.exports = {\n  debug: debug,\n  fetchAndCache: fetchAndCache,\n  openCache: openCache,\n  renameCache: renameCache\n};\n","/*\n\tCopyright 2015 Google Inc. All Rights Reserved.\n\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License.\n\tYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n\tUnless required by applicable law or agreed to in writing, software\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\tSee the License for the specific language governing permissions and\n\tlimitations under the License.\n*/\n'use strict';\n\n// TODO: This is necessary to handle different implementations in the wild\n// The spec defines self.registration, but it was not implemented in Chrome 40.\nvar scope;\nif (self.registration) {\n  scope = self.registration.scope;\n} else {\n  scope = self.scope || new URL('./', self.location).href;\n}\n\nmodule.exports = {\n  cache: {\n    name: '$$$toolbox-cache$$$' + scope + '$$$',\n    maxAgeSeconds: null,\n    maxEntries: null\n  },\n  debug: false,\n  networkTimeoutSeconds: null,\n  preCacheItems: [],\n  // A regular expression to apply to HTTP response codes. Codes that match\n  // will be considered successes, while others will not, and will not be\n  // cached.\n  successResponses: /^0|([123]\\d\\d)|(40[14567])|410$/\n};\n","/*\n Copyright 2015 Google Inc. All Rights Reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n'use strict';\n\nvar DB_PREFIX = 'sw-toolbox-';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'store';\nvar URL_PROPERTY = 'url';\nvar TIMESTAMP_PROPERTY = 'timestamp';\nvar cacheNameToDbPromise = {};\n\nfunction openDb(cacheName) {\n  return new Promise(function(resolve, reject) {\n    var request = indexedDB.open(DB_PREFIX + cacheName, DB_VERSION);\n\n    request.onupgradeneeded = function() {\n      var objectStore = request.result.createObjectStore(STORE_NAME,\n          {keyPath: URL_PROPERTY});\n      objectStore.createIndex(TIMESTAMP_PROPERTY, TIMESTAMP_PROPERTY,\n          {unique: false});\n    };\n\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction getDb(cacheName) {\n  if (!(cacheName in cacheNameToDbPromise)) {\n    cacheNameToDbPromise[cacheName] = openDb(cacheName);\n  }\n\n  return cacheNameToDbPromise[cacheName];\n}\n\nfunction setTimestampForUrl(db, url, now) {\n  return new Promise(function(resolve, reject) {\n    var transaction = db.transaction(STORE_NAME, 'readwrite');\n    var objectStore = transaction.objectStore(STORE_NAME);\n    objectStore.put({url: url, timestamp: now});\n\n    transaction.oncomplete = function() {\n      resolve(db);\n    };\n\n    transaction.onabort = function() {\n      reject(transaction.error);\n    };\n  });\n}\n\nfunction expireOldEntries(db, maxAgeSeconds, now) {\n  // Bail out early by resolving with an empty array if we're not using\n  // maxAgeSeconds.\n  if (!maxAgeSeconds) {\n    return Promise.resolve([]);\n  }\n\n  return new Promise(function(resolve, reject) {\n    var maxAgeMillis = maxAgeSeconds * 1000;\n    var urls = [];\n\n    var transaction = db.transaction(STORE_NAME, 'readwrite');\n    var objectStore = transaction.objectStore(STORE_NAME);\n    var index = objectStore.index(TIMESTAMP_PROPERTY);\n\n    index.openCursor().onsuccess = function(cursorEvent) {\n      var cursor = cursorEvent.target.result;\n      if (cursor) {\n        if (now - maxAgeMillis > cursor.value[TIMESTAMP_PROPERTY]) {\n          var url = cursor.value[URL_PROPERTY];\n          urls.push(url);\n          objectStore.delete(url);\n          cursor.continue();\n        }\n      }\n    };\n\n    transaction.oncomplete = function() {\n      resolve(urls);\n    };\n\n    transaction.onabort = reject;\n  });\n}\n\nfunction expireExtraEntries(db, maxEntries) {\n  // Bail out early by resolving with an empty array if we're not using\n  // maxEntries.\n  if (!maxEntries) {\n    return Promise.resolve([]);\n  }\n\n  return new Promise(function(resolve, reject) {\n    var urls = [];\n\n    var transaction = db.transaction(STORE_NAME, 'readwrite');\n    var objectStore = transaction.objectStore(STORE_NAME);\n    var index = objectStore.index(TIMESTAMP_PROPERTY);\n\n    var countRequest = index.count();\n    index.count().onsuccess = function() {\n      var initialCount = countRequest.result;\n\n      if (initialCount > maxEntries) {\n        index.openCursor().onsuccess = function(cursorEvent) {\n          var cursor = cursorEvent.target.result;\n          if (cursor) {\n            var url = cursor.value[URL_PROPERTY];\n            urls.push(url);\n            objectStore.delete(url);\n            if (initialCount - urls.length > maxEntries) {\n              cursor.continue();\n            }\n          }\n        };\n      }\n    };\n\n    transaction.oncomplete = function() {\n      resolve(urls);\n    };\n\n    transaction.onabort = reject;\n  });\n}\n\nfunction expireEntries(db, maxEntries, maxAgeSeconds, now) {\n  return expireOldEntries(db, maxAgeSeconds, now).then(function(oldUrls) {\n    return expireExtraEntries(db, maxEntries).then(function(extraUrls) {\n      return oldUrls.concat(extraUrls);\n    });\n  });\n}\n\nmodule.exports = {\n  getDb: getDb,\n  setTimestampForUrl: setTimestampForUrl,\n  expireEntries: expireEntries\n};\n"]}